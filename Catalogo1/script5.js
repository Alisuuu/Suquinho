window.App=window.App||{};App.EventListeners=App.EventListeners||{};App.EventListeners.handleSearchInput=e=>{clearTimeout(App.EventListeners.searchTimeout);const t=e.target.value;t.trim()?App.EventListeners.searchTimeout=setTimeout(()=>App.EventListeners.searchItems(t),500):App.EventListeners.fetchTrending()};App.EventListeners.handleCloseModalButton=()=>{App.UI.setItemModalOpen(!1);const e=new URL(window.location.href);e.searchParams.delete('type'),e.searchParams.delete('id'),e.searchParams.delete('season'),e.searchParams.delete('episode'),window.history.pushState({},'',e.toString())};App.EventListeners.handleCloseEpisodeModalButton=()=>{App.UI.setEpisodeModalOpen(!1);const e=new URL(window.location.href);e.searchParams.delete('season'),e.searchParams.delete('episode'),e.searchParams.delete('channel_id'),window.history.pushState({},'',e.toString())};App.EventListeners.handleWindowClick=e=>{App.UI.state.isEpisodeModalOpen&&e.target===App.UI.elements.episodePlayerModal?App.EventListeners.handleCloseEpisodeModalButton():App.UI.state.isItemModalOpen&&e.target===App.UI.elements.itemModal&&!App.UI.state.isEpisodeModalOpen&&App.EventListeners.handleCloseModalButton()};App.EventListeners.handleKeyDown=e=>{'Escape'===e.key&&(App.UI.state.isEpisodeModalOpen?App.EventListeners.handleCloseEpisodeModalButton():App.UI.state.isItemModalOpen&&App.EventListeners.handleCloseModalButton())};App.EventListeners.handleCopyEpisodeLinkBtn=()=>{if(App.UI.state.currentEpisodePlayerUrl){const e=document.createElement('textarea');e.value=App.UI.state.currentEpisodePlayerUrl,document.body.appendChild(e),e.select();try{document.execCommand('copy'),App.UI.showToast('Link do player copiado!')}catch(t){App.UI.showToast('Falha ao copiar.'),console.error('Falha ao copiar:',t)}document.body.removeChild(e)}else App.UI.showToast('Link do player não disponível.')};App.EventListeners.fetchTrending=async()=>{await App.UI.initDisplay('trending/all/week','Explorando o que está em alta',App.UI.elements.btnExplore)};App.EventListeners.fetchMovies=async()=>{await App.UI.initDisplay('discover/movie','Filmes Populares',App.UI.elements.btnMovies,{sort_by:'popularity.desc'})};App.EventListeners.fetchSeries=async()=>{await App.UI.initDisplay('discover/tv','Séries Populares',App.UI.elements.btnSeries,{sort_by:'popularity.desc'})};App.EventListeners.fetchChannels=async()=>{App.UI.elements.currentViewTitleEl&&(App.UI.elements.currentViewTitleEl.textContent='Canais de TV'),App.UI.setActiveButton(App.UI.elements.btnChannels),App.UI.elements.loader&&App.UI.elements.loader.classList.remove('hidden'),App.UI.elements.resultsGrid&& (App.UI.elements.resultsGrid.innerHTML=''),App.UI.elements.noResultsMessage&&App.UI.elements.noResultsMessage.classList.add('hidden');try{const e=await App.API.fetchSuperflixChannels();e&&e.length>0?App.UI.displayResults(e,'Canais de TV',App.ModalHandlers.openChannelPlayerModal):(App.UI.elements.noResultsMessage.textContent='Nenhum canal de TV encontrado.',App.UI.elements.noResultsMessage.classList.remove('hidden'))}catch(e){console.error('Erro ao carregar canais de TV:',e),App.UI.elements.currentViewTitleEl&&(App.UI.elements.currentViewTitleEl.textContent='Erro ao Carregar Canais'),App.UI.elements.noResultsMessage&&(App.UI.elements.noResultsMessage.textContent='Não foi possível carregar os canais. Tente novamente.',App.UI.elements.noResultsMessage.classList.remove('hidden'))}finally{App.UI.elements.loader&&App.UI.elements.loader.classList.add('hidden')}};App.EventListeners.searchItems=async e=>{e.trim()?await App.UI.initDisplay('search/multi',`Resultados da Busca por: "${e}"`,null,{query:e},2):App.EventListeners.fetchTrending()};App.EventListeners.searchTimeout=null;document.addEventListener('DOMContentLoaded',async()=>{const e=new URLSearchParams(window.location.search),t=e.get('type'),s=e.get('id'),a=e.get('season'),r=e.get('episode'),i=e.get('channel_id');if(t&&s){try{if('channel'===t&&i){const e=(await App.API.fetchSuperflixChannels()).find(e=>e.channel_id===i);e&&App.ModalHandlers.openChannelPlayerModal(e)}else await App.ModalHandlers.fetchItemDetails(s,t);const e=new URL(window.location.href);e.searchParams.set('type',t),e.searchParams.set('id',s),window.history.pushState({},'',e.toString()),'tv'===t&&a&&r&& (await App.API.fetchItemDetailsFromApi(s,t)).external_ids?.imdb_id&&(await App.ModalHandlers.openEpisodePlayerModal( (await App.API.fetchItemDetailsFromApi(s,t)).external_ids.imdb_id,a,r,s,`S${a} E${r}`),e.searchParams.set('season',a),e.searchParams.set('episode',r),window.history.pushState({},'',e.toString()))}catch(e){console.error('Falha ao carregar link direto:',e),App.UI.showToast('Não foi possível carregar o conteúdo do link direto.'),App.EventListeners.fetchTrending()}}else App.EventListeners.fetchTrending();App.UI.elements.searchInput&&App.UI.elements.searchInput.addEventListener('input',App.EventListeners.handleSearchInput),App.UI.elements.closeModalButton&&App.UI.elements.closeModalButton.addEventListener('click',App.EventListeners.handleCloseModalButton),App.UI.elements.closeEpisodeModalButton&&App.UI.elements.closeEpisodeModalButton.addEventListener('click',App.EventListeners.handleCloseEpisodeModalButton),App.UI.elements.copyEpisodeLinkBtn&&App.UI.elements.copyEpisodeLinkBtn.addEventListener('click',App.EventListeners.handleCopyEpisodeLinkBtn),window.addEventListener('click',App.EventListeners.handleWindowClick),document.addEventListener('keydown',App.EventListeners.handleKeyDown),App.UI.elements.btnExplore&&App.UI.elements.btnExplore.addEventListener('click',App.EventListeners.fetchTrending),App.UI.elements.btnMovies&&App.UI.elements.btnMovies.addEventListener('click',App.EventListeners.fetchMovies),App.UI.elements.btnSeries&&App.UI.elements.btnSeries.addEventListener('click',App.EventListeners.fetchSeries),App.UI.elements.btnChannels&&App.UI.elements.btnChannels.addEventListener('click',App.EventListeners.fetchChannels)});
